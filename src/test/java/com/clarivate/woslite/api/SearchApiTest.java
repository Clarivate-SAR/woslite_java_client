/*
 * Web of Science API Lite
 * A responsive API that supports rich searching across the Web of Science Core Collection to retrieve core article metadata.  This service provides a great way to reuse Web of Science data both internally and externally to enhance  institutional repositories and research networking systems with best-in-class data. This API supports searching across the Web of Science to retrieve item-level metadata with limited fields:  - UT (Unique Identifier) - Authors - Author keywords - Document type - Title - Issue - Pages - Publication date - Source title - Volume - DOI - ISBN - ISSN   The API supports JSON and XML responses, and this documentation supports trying both response types. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.clarivate.woslite.api;

import com.clarivate.woslite.ApiException;
import com.clarivate.woslite.models.WosLiteResponse;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for SearchApi
 */
@Ignore
public class SearchApiTest {

    private final SearchApi api = new SearchApi();

    
    /**
     * Fetch record(s) by query identifier
     *
     * This operation returns record(s) identified by a query identifier.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryQueryIdGetTest() throws ApiException {
        Integer queryId = null;
        Integer count = null;
        Integer firstRecord = null;
        String sortField = null;
        WosLiteResponse response = api.queryQueryIdGet(queryId, count, firstRecord, sortField);

        // TODO: test validations
    }
    
    /**
     * Submits a user query and returns results
     *
     * The search operation submits a search query to the specified database edition and retrieves data. This operation returns a query ID that can be used in subsequent operations to retrieve more records.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void rootGetTest() throws ApiException {
        String databaseId = null;
        String usrQuery = null;
        Integer count = null;
        Integer firstRecord = null;
        String lang = null;
        String edition = null;
        String publishTimeSpan = null;
        String loadTimeSpan = null;
        String sortField = null;
        WosLiteResponse response = api.rootGet(databaseId, usrQuery, count, firstRecord, lang, edition, publishTimeSpan, loadTimeSpan, sortField);

        // TODO: test validations
    }
    
}
