/*
 * Web of Science API Lite
 * A responsive API that supports rich searching across the Web of Science Core Collection to retrieve core article metadata.  This service provides a great way to reuse Web of Science data both internally and externally to enhance  institutional repositories and research networking systems with best-in-class data. This API supports searching across the Web of Science to retrieve item-level metadata with limited fields:  - UT (Unique Identifier) - Authors - Author keywords - Document type - Title - Issue - Pages - Publication date - Source title - Volume - DOI - ISBN - ISSN   The API supports JSON and XML responses, and this documentation supports trying both response types. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.clarivate.woslite.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * The source of this article; journal, book or medium in which the document was published
 */
@ApiModel(description = "The source of this article; journal, book or medium in which the document was published")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-02T10:06:41.554+02:00[Europe/Berlin]")
public class Source {
  public static final String SERIALIZED_NAME_PAGES = "Pages";
  @SerializedName(SERIALIZED_NAME_PAGES)
  private List<String> pages = null;

  public static final String SERIALIZED_NAME_SOURCE_TITLE = "SourceTitle";
  @SerializedName(SERIALIZED_NAME_SOURCE_TITLE)
  private List<String> sourceTitle = null;

  public static final String SERIALIZED_NAME_ISSUE = "Issue";
  @SerializedName(SERIALIZED_NAME_ISSUE)
  private List<String> issue = null;

  public static final String SERIALIZED_NAME_VOLUME = "Volume";
  @SerializedName(SERIALIZED_NAME_VOLUME)
  private List<String> volume = null;

  public static final String SERIALIZED_NAME_SPECIAL_ISSUE = "SpecialIssue";
  @SerializedName(SERIALIZED_NAME_SPECIAL_ISSUE)
  private List<String> specialIssue = null;

  public static final String SERIALIZED_NAME_BOOK_SERIES_TITLE = "BookSeriesTitle";
  @SerializedName(SERIALIZED_NAME_BOOK_SERIES_TITLE)
  private List<String> bookSeriesTitle = null;

  public static final String SERIALIZED_NAME_PUBLISHED_BIBLIO_DATE = "Published.BiblioDate";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_BIBLIO_DATE)
  private List<String> publishedBiblioDate = null;

  public static final String SERIALIZED_NAME_PUBLISHED_BIBLIO_YEAR = "Published.BiblioYear";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_BIBLIO_YEAR)
  private List<String> publishedBiblioYear = null;


  public Source pages(List<String> pages) {
    
    this.pages = pages;
    return this;
  }

  public Source addPagesItem(String pagesItem) {
    if (this.pages == null) {
      this.pages = new ArrayList<String>();
    }
    this.pages.add(pagesItem);
    return this;
  }

   /**
   * Pages range in the source
   * @return pages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Pages range in the source")

  public List<String> getPages() {
    return pages;
  }


  public void setPages(List<String> pages) {
    this.pages = pages;
  }


  public Source sourceTitle(List<String> sourceTitle) {
    
    this.sourceTitle = sourceTitle;
    return this;
  }

  public Source addSourceTitleItem(String sourceTitleItem) {
    if (this.sourceTitle == null) {
      this.sourceTitle = new ArrayList<String>();
    }
    this.sourceTitle.add(sourceTitleItem);
    return this;
  }

   /**
   * The title of the source in which the document was published
   * @return sourceTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The title of the source in which the document was published")

  public List<String> getSourceTitle() {
    return sourceTitle;
  }


  public void setSourceTitle(List<String> sourceTitle) {
    this.sourceTitle = sourceTitle;
  }


  public Source issue(List<String> issue) {
    
    this.issue = issue;
    return this;
  }

  public Source addIssueItem(String issueItem) {
    if (this.issue == null) {
      this.issue = new ArrayList<String>();
    }
    this.issue.add(issueItem);
    return this;
  }

   /**
   * Issue Number
   * @return issue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Issue Number")

  public List<String> getIssue() {
    return issue;
  }


  public void setIssue(List<String> issue) {
    this.issue = issue;
  }


  public Source volume(List<String> volume) {
    
    this.volume = volume;
    return this;
  }

  public Source addVolumeItem(String volumeItem) {
    if (this.volume == null) {
      this.volume = new ArrayList<String>();
    }
    this.volume.add(volumeItem);
    return this;
  }

   /**
   * Volume number
   * @return volume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Volume number")

  public List<String> getVolume() {
    return volume;
  }


  public void setVolume(List<String> volume) {
    this.volume = volume;
  }


  public Source specialIssue(List<String> specialIssue) {
    
    this.specialIssue = specialIssue;
    return this;
  }

  public Source addSpecialIssueItem(String specialIssueItem) {
    if (this.specialIssue == null) {
      this.specialIssue = new ArrayList<String>();
    }
    this.specialIssue.add(specialIssueItem);
    return this;
  }

   /**
   * Special issue, in case was published to a special issue journal
   * @return specialIssue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Special issue, in case was published to a special issue journal")

  public List<String> getSpecialIssue() {
    return specialIssue;
  }


  public void setSpecialIssue(List<String> specialIssue) {
    this.specialIssue = specialIssue;
  }


  public Source bookSeriesTitle(List<String> bookSeriesTitle) {
    
    this.bookSeriesTitle = bookSeriesTitle;
    return this;
  }

  public Source addBookSeriesTitleItem(String bookSeriesTitleItem) {
    if (this.bookSeriesTitle == null) {
      this.bookSeriesTitle = new ArrayList<String>();
    }
    this.bookSeriesTitle.add(bookSeriesTitleItem);
    return this;
  }

   /**
   * Book series title - in case the article is published in book series
   * @return bookSeriesTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Book series title - in case the article is published in book series")

  public List<String> getBookSeriesTitle() {
    return bookSeriesTitle;
  }


  public void setBookSeriesTitle(List<String> bookSeriesTitle) {
    this.bookSeriesTitle = bookSeriesTitle;
  }


  public Source publishedBiblioDate(List<String> publishedBiblioDate) {
    
    this.publishedBiblioDate = publishedBiblioDate;
    return this;
  }

  public Source addPublishedBiblioDateItem(String publishedBiblioDateItem) {
    if (this.publishedBiblioDate == null) {
      this.publishedBiblioDate = new ArrayList<String>();
    }
    this.publishedBiblioDate.add(publishedBiblioDateItem);
    return this;
  }

   /**
   * Published Date
   * @return publishedBiblioDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Published Date")

  public List<String> getPublishedBiblioDate() {
    return publishedBiblioDate;
  }


  public void setPublishedBiblioDate(List<String> publishedBiblioDate) {
    this.publishedBiblioDate = publishedBiblioDate;
  }


  public Source publishedBiblioYear(List<String> publishedBiblioYear) {
    
    this.publishedBiblioYear = publishedBiblioYear;
    return this;
  }

  public Source addPublishedBiblioYearItem(String publishedBiblioYearItem) {
    if (this.publishedBiblioYear == null) {
      this.publishedBiblioYear = new ArrayList<String>();
    }
    this.publishedBiblioYear.add(publishedBiblioYearItem);
    return this;
  }

   /**
   * Published Year
   * @return publishedBiblioYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Published Year")

  public List<String> getPublishedBiblioYear() {
    return publishedBiblioYear;
  }


  public void setPublishedBiblioYear(List<String> publishedBiblioYear) {
    this.publishedBiblioYear = publishedBiblioYear;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Source source = (Source) o;
    return Objects.equals(this.pages, source.pages) &&
        Objects.equals(this.sourceTitle, source.sourceTitle) &&
        Objects.equals(this.issue, source.issue) &&
        Objects.equals(this.volume, source.volume) &&
        Objects.equals(this.specialIssue, source.specialIssue) &&
        Objects.equals(this.bookSeriesTitle, source.bookSeriesTitle) &&
        Objects.equals(this.publishedBiblioDate, source.publishedBiblioDate) &&
        Objects.equals(this.publishedBiblioYear, source.publishedBiblioYear);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pages, sourceTitle, issue, volume, specialIssue, bookSeriesTitle, publishedBiblioDate, publishedBiblioYear);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Source {\n");
    sb.append("    pages: ").append(toIndentedString(pages)).append("\n");
    sb.append("    sourceTitle: ").append(toIndentedString(sourceTitle)).append("\n");
    sb.append("    issue: ").append(toIndentedString(issue)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("    specialIssue: ").append(toIndentedString(specialIssue)).append("\n");
    sb.append("    bookSeriesTitle: ").append(toIndentedString(bookSeriesTitle)).append("\n");
    sb.append("    publishedBiblioDate: ").append(toIndentedString(publishedBiblioDate)).append("\n");
    sb.append("    publishedBiblioYear: ").append(toIndentedString(publishedBiblioYear)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

